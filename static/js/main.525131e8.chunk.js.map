{"version":3,"sources":["images/Vector-mesto-logo.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","utils/api.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","images/popupAccept.svg","images/popupError.svg","components/InfoTooltip.js","components/Login.js","components/ProtectedRoute.js","components/Register.js","utils/auth.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","src","logo","alt","exact","path","email","to","onClick","logOut","CurrentUserContext","React","createContext","Card","currentUser","useContext","isOwn","owner","_id","cardLikeButtonClassName","likes","some","i","link","name","onCardClick","imgOpen","type","onCardDelete","onCardLike","length","Main","avatar","onEditAvatar","onEditProfile","about","onAddPlace","cards","map","item","id","Footer","Date","getFullYear","PopupWithForm","isOpen","onClose","title","onSubmit","noValidate","children","ImagePopup","card","api","config","this","_url","url","_headers","headers","res","ok","json","Promise","reject","status","fetch","then","_checkResponse","data","method","body","JSON","stringify","cardId","isLiked","_putLike","_removeLike","EditProfilePopup","useState","setName","description","setDescription","useEffect","e","preventDefault","onUpdateUser","value","onChange","target","placeholder","required","minLength","maxLength","EditAvatarPopup","avatarRef","useRef","onUpdateAvatar","current","ref","AddPlacePopup","setLink","InfoTooltip","checkRegistration","popupAccept","popupError","Login","setEmail","password","setPassword","onData","ProtectedRoute","Component","component","loggedIn","Register","checkResponse","BASE_URL","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isInfoTooltip","setIsInfoTooltip","selectedCard","setSelectedCard","setCurrentUser","setCards","setLoggedIn","setCheckRegistration","history","useHistory","handleInfoTooltip","closeAllPopups","getInitialCards","catch","err","console","log","getUserInfo","userInfo","localStorage","getItem","token","auth","push","handleTokenCheck","Provider","removeItem","changeLikeCardStatus","newCard","state","c","deleteCard","filter","setItem","editUserInfo","addNewCard","editUserAvatar","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAAe,MAA0B,8C,OC4B1BA,MAxBf,SAAgBC,GACZ,OAEI,yBAAQC,UAAU,sBAAlB,UACI,qBAAKA,UAAU,eAAeC,IAAKC,EAAMC,IAAI,+CAC7C,sBAAKH,UAAU,oBAAf,UACI,eAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,IAAlB,UACI,oBAAIL,UAAU,gBAAd,SAA+BD,EAAMO,QACrC,cAAC,IAAD,CAAMC,GAAG,WAAWC,QAAST,EAAMU,OAAQT,UAAU,sBAArD,+CAGJ,cAAC,IAAD,CAAOK,KAAK,WAAZ,SACI,cAAC,IAAD,CAAME,GAAG,WAAWP,UAAU,sBAA9B,8CAGJ,cAAC,IAAD,CAAOK,KAAK,WAAZ,SACI,cAAC,IAAD,CAAME,GAAG,WAAWP,UAAU,sBAA9B,mICjBPU,EAAqBC,IAAMC,gBCgDzBC,MAhDf,SAAcd,GAGV,IAAMe,EAAcH,IAAMI,WAAWL,GAG/BM,EAAQjB,EAAMkB,MAAMC,MAAQJ,EAAYI,IAMxCC,EAHUpB,EAAMqB,MAAMC,MAAK,SAAAC,GAAC,OAAIA,EAAEJ,MAAQJ,EAAYI,OAGlB,qDAAuD,yBAiBjG,OAEI,qBAAIlB,UAAU,iBAAd,UACI,qBAAKA,UAAU,kBAAkBC,IAAKF,EAAMwB,KAAMpB,IAAKJ,EAAMyB,KAAMhB,QAP3E,WACIT,EAAM0B,YAAY,CAACD,KAAMzB,EAAMyB,KAAMD,KAAMxB,EAAMwB,KAAMG,SAAS,OAO5D,wBAAQC,KAAK,SAAS3B,UAAS,iCAA4BgB,EAAQ,GAAK,oCAAsCR,QAbtH,WACIT,EAAM6B,aAAa7B,MAaf,sBAAKC,UAAU,sBAAf,UACI,oBAAIA,UAAU,iBAAd,SAAgCD,EAAMyB,OACtC,sBAAKxB,UAAU,2BAAf,UACI,wBAAQ2B,KAAK,SAAS3B,UAAWmB,EAAyBX,QAtB1E,WACIT,EAAM8B,WAAW9B,MAsBL,mBAAGC,UAAU,yBAAb,SAAuCD,EAAMqB,MAAMU,mBCoBxDC,MAvDf,SAAchC,GAIV,IAAMe,EAAcH,IAAMI,WAAWL,GAGrC,OAEI,uBAAMV,UAAU,UAAhB,UAEI,0BAASA,UAAU,wBAAnB,UACE,sBAAKA,UAAU,0BAAf,UACE,sBAAKA,UAAU,4BAAf,UACI,qBAAKA,UAAU,kBAAkBC,IAAKa,EAAYkB,OAAQ7B,IAAI,qDAC9D,qBAAKH,UAAU,0BAAf,SACI,wBAAQQ,QAAST,EAAMkC,aAAcjC,UAAU,uBAAuB2B,KAAK,gBAGnF,sBAAK3B,UAAU,gBAAf,UACI,sBAAKA,UAAU,wBAAf,UACI,oBAAIA,UAAU,iBAAd,SAAgCc,EAAYU,OAC5C,wBAAQhB,QAAST,EAAMmC,cAAelC,UAAU,uBAAuB2B,KAAK,cAEhF,mBAAG3B,UAAU,oBAAb,SAAkCc,EAAYqB,cAGlD,wBAAQ3B,QAAST,EAAMqC,WAAYpC,UAAU,sBAAsB2B,KAAK,cAG5E,yBAAS3B,UAAU,0BAAnB,SACI,oBAAIA,UAAU,iBAAd,SACMD,EAAMsC,MAAMC,KAAI,SAAAC,GAAI,OACd,cAAC,EAAD,CAEAhB,KAAMgB,EAAKhB,KACXC,KAAMe,EAAKf,KACXJ,MAAOmB,EAAKnB,MACZK,YAAa1B,EAAM0B,YACnBR,MAASsB,EAAKtB,MACdY,WAAc9B,EAAM8B,WACpBW,GAAMD,EAAKrB,IACXU,aAAgB7B,EAAM6B,cARjBW,EAAKrB,gBC5BvBuB,MAVf,WACI,OAEI,wBAAQzC,UAAU,sBAAlB,SACI,oBAAGA,UAAU,eAAb,mBAAoC,IAAI0C,MAAOC,cAA/C,sBCeGC,MAnBf,SAAuB7C,GAGnB,OAEI,qBAAKC,UAAS,sBAAiBD,EAAMyB,KAAvB,YAA+BzB,EAAM8C,OAAS,eAAgB,IAA5E,SACI,sBAAK7C,UAAS,4CAAuCD,EAAMyB,MAA3D,UACI,wBAAQxB,UAAS,oCAA+BD,EAAMyB,MAAQG,KAAK,SAASnB,QAAST,EAAM+C,UAC3F,oBAAI9C,UAAU,eAAd,SAA8BD,EAAMgD,QACpC,sBAAMC,SAAUjD,EAAMiD,SAAUhD,UAAS,kCAA6BD,EAAMyB,MAAQA,KAAI,UAAKzB,EAAMyB,KAAX,SAAwByB,YAAU,EAA1H,SACKlD,EAAMmD,iBCQZC,MAlBf,SAAoBpD,GAKhB,OAEI,qBAAKC,UAAS,0BAAqBD,EAAMqD,KAAK1B,QAAU,eAAgB,IAAxE,SACI,sBAAK1B,UAAU,wCAAf,UACI,wBAAQA,UAAU,gCAAgC2B,KAAK,SAASnB,QAAST,EAAM+C,UAC/E,qBAAK9C,UAAU,eAAeC,IAAKF,EAAMqD,KAAK7B,KAAMpB,IAAKJ,EAAMqD,KAAK5B,OACpE,oBAAIxB,UAAU,gCAAd,SAA+CD,EAAMqD,KAAK5B,a,gBCiH3D6B,EARH,I,WAlHR,WAAYC,GAAS,oBACjBC,KAAKC,KAAOF,EAAOG,IACnBF,KAAKG,SAAWJ,EAAOK,Q,kDAM3B,SAAeC,GACX,OAAIA,EAAIC,GACGD,EAAIE,OAGRC,QAAQC,OAAR,mJAA6CJ,EAAIK,OAAjD,Q,6BAKX,WACG,OAAOC,MAAM,GAAD,OAAIX,KAAKC,KAAT,SAAsB,CAC5BG,QAASJ,KAAKG,WAChBS,KAAKZ,KAAKa,kB,wBAKjB,SAAWC,GACP,OAAOH,MAAM,GAAD,OAAIX,KAAKC,KAAT,SAAsB,CAC5Bc,OAAQ,OACRX,QAASJ,KAAKG,SACda,KAAMC,KAAKC,UAAU,CACjBjD,KAAM6C,EAAK7C,KACXD,KAAM8C,EAAK9C,SAElB4C,KAAKZ,KAAKa,kB,yBAKjB,WACI,OAAOF,MAAM,GAAD,OAAIX,KAAKC,KAAT,YAAyB,CAC/BG,QAASJ,KAAKG,WACjBS,KAAKZ,KAAKa,kB,0BAKjB,SAAaC,GACT,OAAOH,MAAM,GAAD,OAAIX,KAAKC,KAAT,YAAyB,CACjCc,OAAQ,QACRX,QAASJ,KAAKG,SACda,KAAMC,KAAKC,UAAU,CACjBjD,KAAM6C,EAAK7C,KACXW,MAAOkC,EAAKlC,UAEjBgC,KAAKZ,KAAKa,kB,4BAKjB,SAAeC,GACX,OAAOH,MAAM,GAAD,OAAIX,KAAKC,KAAT,mBAAgC,CACxCc,OAAQ,QACRX,QAASJ,KAAKG,SACda,KAAMC,KAAKC,UAAU,CACjBzC,OAAQqC,EAAKrC,WAElBmC,KAAKZ,KAAKa,kB,sBAMjB,SAASM,GACL,OAAOR,MAAM,GAAD,OAAIX,KAAKC,KAAT,uBAA4BkB,EAA5B,KAAuC,CAC/CJ,OAAQ,MACRX,QAASJ,KAAKG,WACjBS,KAAKZ,KAAKa,kB,yBAKf,SAAYM,GACR,OAAOR,MAAM,GAAD,OAAIX,KAAKC,KAAT,uBAA4BkB,EAA5B,KAAuC,CAC/CJ,OAAQ,SACRX,QAASJ,KAAKG,WACjBS,KAAKZ,KAAKa,kB,kCAMf,SAAqBM,EAAQC,GACzB,OAAIA,EACMpB,KAAKqB,SAASF,GAGbnB,KAAKsB,YAAYH,K,wBAMhC,SAAWA,GACP,OAAOR,MAAM,GAAD,OAAIX,KAAKC,KAAT,iBAAsBkB,EAAtB,KAAiC,CACzCJ,OAAQ,SACRX,QAASJ,KAAKG,WACjBS,KAAKZ,KAAKa,oB,KAOP,CAAQ,CAChBX,IAAK,+CACLE,QAAS,CACL,eAAgB,mBAChB,cAAiB,0CCzDVmB,MA7Df,SAA0B/E,GAGtB,IAAMe,EAAcH,IAAMI,WAAWL,GAHR,EAMLC,IAAMoE,SAAS,IANV,mBAMtBvD,EANsB,KAMhBwD,EANgB,OAOSrE,IAAMoE,SAAS,IAPxB,mBAOtBE,EAPsB,KAOTC,EAPS,KAyC7B,OArBAvE,IAAMwE,WAAU,WACZH,EAAQlE,EAAYU,MACpB0D,EAAepE,EAAYqB,SAC1B,CAACrB,IAmBF,eAAC,EAAD,CACIU,KAAK,OACLuB,MAAM,4HACNF,OAAQ9C,EAAM8C,OACdC,QAAS/C,EAAM+C,QACfE,SArBR,SAAsBoC,GAElBA,EAAEC,iBAGFtF,EAAMuF,aAAa,CACjB9D,OACAW,MAAO8C,KAST,UAQQ,uBAAOM,MAAO/D,EAAMgE,SAxChC,SAA0BJ,GACtBJ,EAAQI,EAAEK,OAAOF,QAuCuC5D,KAAK,OAAO3B,UAAU,oCAAoCwB,KAAK,aAAakE,YAAY,qBAAMC,UAAQ,EAACC,UAAU,IAAIC,UAAU,KAAKrD,GAAG,oBACvL,sBAAMxC,UAAU,6BAA6BwC,GAAG,0BAChD,uBAAO+C,MAAON,EAAaO,SAtCvC,SAAiCJ,GAC7BF,EAAeE,EAAEK,OAAOF,QAqC+C5D,KAAK,OAAO3B,UAAU,uCAAuCwB,KAAK,cAAckE,YAAY,kCAASC,UAAQ,EAACC,UAAU,IAAIC,UAAU,MAAMrD,GAAG,qBAC9M,sBAAMxC,UAAU,6BAA6BwC,GAAG,2BAChD,wBAAQxC,UAAU,gBAAgB2B,KAAK,SAAvC,wECnBDmE,MAnCf,SAAyB/F,GAGrB,IAAMgG,EAAYpF,IAAMqF,SAcxB,OACI,eAAC,EAAD,CACIxE,KAAK,aACLuB,MAAM,wFACNF,OAAQ9C,EAAM8C,OACdC,QAAS/C,EAAM+C,QACfE,SAjBR,SAAsBoC,GAClBA,EAAEC,iBAEFtF,EAAMkG,eAAe,CACnBjE,OAAQ+D,EAAUG,QAAQX,SAQ5B,UAQQ,uBAAOY,IAAKJ,EAAWpE,KAAK,MAAM3B,UAAU,4DAA4DwB,KAAK,mBAAmBkE,YAAY,qGAAqBC,UAAQ,EAACnD,GAAG,eAC7K,sBAAMxC,UAAU,cAAcwC,GAAG,oCACjC,wBAAQxC,UAAU,yCAAyC2B,KAAK,SAAhE,wECwBDyE,MApDf,SAAuBrG,GAAO,MAGEY,IAAMoE,SAAS,IAHjB,mBAGfvD,EAHe,KAGTwD,EAHS,OAIErE,IAAMoE,SAAS,IAJjB,mBAIfxD,EAJe,KAIT8E,EAJS,KAgCxB,OACE,eAAC,EAAD,CACA7E,KAAK,QACLuB,MAAM,gEACNF,OAAQ9C,EAAM8C,OACdC,QAAS/C,EAAM+C,QACfE,SAtBA,SAAsBoC,GAEpBA,EAAEC,iBAGFtF,EAAMqC,WAAW,CACjBZ,KAAMA,EACND,KAAMA,IAENyD,EAAQ,IACRqB,EAAQ,KAOV,UAQI,uBAAOd,MAAO/D,EAAMgE,SAlCxB,SAA0BJ,GACtBJ,EAAQI,EAAEK,OAAOF,QAiC+B5D,KAAK,OAAO3B,UAAU,oCAAoCwB,KAAK,mBAAmBkE,YAAY,mDAAWC,UAAQ,EAACC,UAAU,IAAIC,UAAU,KAAKrD,GAAG,qBAClM,sBAAMxC,UAAU,6BAA6BwC,GAAG,2BAChD,uBAAO+C,MAAOhE,EAAMiE,SAhCxB,SAA0BJ,GACtBiB,EAAQjB,EAAEK,OAAOF,QA+B+B5D,KAAK,MAAM3B,UAAU,uCAAuCwB,KAAK,mBAAmBkE,YAAY,qGAAqBC,UAAQ,EAACnD,GAAG,eACjL,sBAAMxC,UAAU,6BAA6BwC,GAAG,qBAChD,wBAAQxC,UAAU,gBAAgB2B,KAAK,SAAvC,wECjDG,MAA0B,wCCA1B,MAA0B,uCCgB1B2E,MAZf,SAAqBvG,GACjB,OACI,qBAAKC,UAAS,sBAAiBD,EAAMyB,KAAvB,YAA+BzB,EAAM8C,OAAS,eAAgB,IAA5E,SACI,sBAAK7C,UAAS,4CAAuCD,EAAMyB,MAA3D,UACI,wBAAQxB,UAAS,oCAA+BD,EAAMyB,MAAQG,KAAK,SAASnB,QAAST,EAAM+C,UAC3F,qBAAK9C,UAAU,0BAA0BC,IAAKF,EAAMwG,kBAAoBC,EAAcC,EAAYtG,IAAKJ,EAAMwG,kBAAoB,kCAAW,kDAC5I,oBAAIvG,UAAU,4BAAd,SAA2CD,EAAMwG,kBAAoB,wKAAmC,8MCuCzGG,MA9Cf,SAAe3G,GAAO,MAEQY,IAAMoE,SAAS,IAFvB,mBAEXzE,EAFW,KAEJqG,EAFI,OAGchG,IAAMoE,SAAS,IAH7B,mBAGX6B,EAHW,KAGDC,EAHC,KA0BlB,OAEI,sBAAK7G,UAAU,gDAAf,UACI,oBAAIA,UAAU,6BAAd,sCACA,uBAAMA,UAAU,4BAA4BgD,SAdpD,SAAsBoC,GAElBA,EAAEC,iBAEFtF,EAAM+G,OAAO,CACTxG,MAAOA,EACPsG,SAAUA,KAQ0DpF,KAAK,YAAYyB,YAAU,EAA/F,UAEI,uBAAOsC,MAAOjF,EAAOkF,SAzBjC,SAA2BJ,GACvBuB,EAASvB,EAAEK,OAAOF,QAwBwC5D,KAAK,QAAQ3B,UAAU,6BAA6BwB,KAAK,iBAAiBkE,YAAY,QAAQC,UAAQ,EAACC,UAAU,IAAIC,UAAU,KAAKrD,GAAG,mBACzL,sBAAMxC,UAAU,2CAA2CwC,GAAG,yBAE9D,uBAAO+C,MAAOqB,EAAUpB,SAxBpC,SAA8BJ,GAC1ByB,EAAYzB,EAAEK,OAAOF,QAuB4C5D,KAAK,WAAW3B,UAAU,6BAA6BwB,KAAK,qBAAqBkE,YAAY,uCAASC,UAAQ,EAACC,UAAU,IAAIC,UAAU,MAAMrD,GAAG,uBACzM,sBAAMxC,UAAU,2CAA2CwC,GAAG,6BAE9D,wBAAQxC,UAAU,8BAA8B2B,KAAK,SAArD,mD,gBC5BDoF,MAVf,YAA6D,IAAxBC,EAAuB,EAAlCC,UAAyBlH,EAAS,6BACxD,OACI,cAAC,IAAD,UACK,kBACGA,EAAMmH,SAAW,cAAEF,EAAF,eAAgBjH,IAAY,cAAC,IAAD,CAAUQ,GAAG,iBC4C3D4G,MAhDf,SAAkBpH,GAAO,MAGKY,IAAMoE,SAAS,IAHpB,mBAGdzE,EAHc,KAGPqG,EAHO,OAIWhG,IAAMoE,SAAS,IAJ1B,mBAId6B,EAJc,KAIJC,EAJI,KA4BrB,OAEI,sBAAK7G,UAAU,gDAAf,UACI,oBAAIA,UAAU,6BAAd,gFACA,uBAAMA,UAAU,4BAA4BgD,SAfpD,SAAsBoC,GAElBA,EAAEC,iBAEFtF,EAAM+G,OAAO,CACTxG,MAAOA,EACPsG,SAAUA,KAS0DpF,KAAK,YAAYyB,YAAU,EAA/F,UAEI,uBAAOsC,MAAOjF,EAAOkF,SA1BjC,SAA2BJ,GACvBuB,EAASvB,EAAEK,OAAOF,QAyBwC5D,KAAK,QAAQ3B,UAAU,6BAA6BwB,KAAK,iBAAiBkE,YAAY,QAAQC,UAAQ,EAACC,UAAU,IAAIC,UAAU,KAAKrD,GAAG,mBACzL,sBAAMxC,UAAU,4BAA4BwC,GAAG,yBAE/C,uBAAO+C,MAAOqB,EAAUpB,SAzBpC,SAA8BJ,GAC1ByB,EAAYzB,EAAEK,OAAOF,QAwB4C5D,KAAK,WAAW3B,UAAU,6BAA6BwB,KAAK,qBAAqBkE,YAAY,uCAASC,UAAQ,EAACC,UAAU,IAAIC,UAAU,MAAMrD,GAAG,uBACzM,sBAAMxC,UAAU,4BAA4BwC,GAAG,6BAE/C,wBAAQxC,UAAU,8BAA8B2B,KAAK,SAArD,6HAEJ,cAAC,IAAD,CAAM3B,UAAU,4BAA6BO,GAAG,WAAhD,qKC7CN6G,EAAgB,SAACxD,GACnB,OAAIA,EAAIC,GACGD,EAAIE,OAGRC,QAAQC,OAAR,mJAA6CJ,EAAIK,OAAjD,OAGEoD,EAAW,gCCuTTC,MAxSf,WAAe,MAEiD3G,IAAMoE,UAAS,GAFhE,mBAEJwC,EAFI,KAEoBC,EAFpB,OAG2C7G,IAAMoE,UAAS,GAH1D,mBAGJ0C,EAHI,KAGiBC,EAHjB,OAI+C/G,IAAMoE,UAAS,GAJ9D,mBAIJ4C,EAJI,KAImBC,EAJnB,OAK+BjH,IAAMoE,UAAS,GAL9C,mBAKJ8C,EALI,KAKWC,EALX,OAM6BnH,IAAMoE,SAAS,CAACvD,KAAM,GAAID,KAAM,GAAIG,SAAS,IAN1E,mBAMJqG,EANI,KAMUC,EANV,OAO2BrH,IAAMoE,SAAS,CAEjDvD,KAAM,iCACNW,MAAO,iCACPH,OAAQ,+EAXD,mBAOJlB,EAPI,KAOSmH,EAPT,OAaetH,IAAMoE,SAAS,IAb9B,mBAaJ1C,EAbI,KAaG6F,EAbH,OAcqBvH,IAAMoE,UAAS,GAdpC,mBAcJmC,EAdI,KAcMiB,EAdN,OAeexH,IAAMoE,SAAS,IAf9B,oBAeJzE,GAfI,MAeGqG,GAfH,SAgBuChG,IAAMoE,SAAS,IAhBtD,qBAgBJwB,GAhBI,MAgBe6B,GAhBf,MAiBLC,GAAUC,cAsChB,SAASC,KACLT,GAAiB,GAkBrB,SAASU,KACLZ,GAAyB,GACzBJ,GAA0B,GAC1BE,GAAuB,GACvBM,EAAgB,CAACxG,KAAM,GAAID,KAAM,GAAIG,SAAS,IAC9CoG,GAAiB,GA0IvB,OApMEnH,IAAMwE,WAAU,WAEZ9B,EAAIoF,kBACCtE,MAAK,SAAA9B,GACF6F,EAAS7F,MAGZqG,OAAM,SAACC,GACJC,QAAQC,IAAR,wGAAkCF,SAG3C,IAIHhI,IAAMwE,WAAU,WACZ9B,EAAIyF,cACH3E,MAAK,SAAA4E,GACFd,EAAec,MAElBL,OAAM,SAACC,GACJC,QAAQC,IAAR,wGAAkCF,SAEvC,IAEHhI,IAAMwE,WAAU,YA6IhB,WACI,GAAG6D,aAAaC,QAAQ,OAAQ,CAC5B,IAAMC,EAAQF,aAAaC,QAAQ,OAChCC,GDnLW,SAACA,GACvB,OAAOhF,MAAM,GAAD,OAAImD,EAAJ,aAAyB,CACnC/C,OAAQ,MACRX,QAAS,CACP,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BuF,MAG5B/E,MAAK,SAAAP,GAAG,OAAIwD,EAAcxD,MC4KjBuF,CAAgBD,GACX/E,MAAK,SAAAP,GACCA,IACCuE,GAAY,GACZxB,GAAS/C,EAAIS,KAAK/D,OAClB+H,GAAQe,KAAK,SAGpBV,OAAM,SAACC,GACJC,QAAQC,IAAR,wGAAkCF,QAzJlDU,MA2KJ,cAAC3I,EAAmB4I,SAApB,CAA6B/D,MAAQzE,EAArC,SACA,sBAAKd,UAAU,OAAf,UACI,cAAC,EAAD,CACAM,MAAOA,GACPG,OAdJ,WACI0H,GAAY,GACZxB,GAAS,IACTqC,aAAaO,WAAW,OACvB,OAaD,eAAC,IAAD,WACK,cAAC,EAAD,CACAnJ,OAAK,EAACC,KAAK,IACX6G,SAAUA,EACVD,UAAWlF,EACXG,cAtKT,WACIsF,GAA0B,IAsKrBpF,WAnKT,WACIsF,GAAuB,IAmKlBzF,aA7KT,WACI2F,GAAyB,IA6KpBnG,YAtJT,SAAyB2B,GACrB4E,EAAgB5E,IAsJXf,MAAOA,EACPR,WAnJT,SAAwBuB,GAGpB,IAAMuB,EAAUvB,EAAKhC,MAAMC,MAAK,SAAAC,GAAC,OAAIA,EAAEJ,MAAQJ,EAAYI,OAG3DmC,EAAImG,qBAAqBpG,EAAKZ,IAAKmC,GAC9BR,MAAK,SAACsF,GACHvB,GAAS,SAAAwB,GAAK,OAAIA,EAAMpH,KAAI,SAACqH,GAAD,OAAOA,EAAEzI,MAAQkC,EAAKZ,GAAKiH,EAAUE,WAEpEjB,OAAM,SAACC,GACJC,QAAQC,IAAR,wGAAkCF,QAyIrC/G,aApIT,SAA0BwB,GACtBC,EAAIuG,WAAWxG,EAAKZ,IACf2B,MAAK,SAACyF,GAEH1B,GAAS,SAAAwB,GAAK,OAAIA,EAAMG,QAAO,SAACF,GAAD,OAAOA,EAAEzI,MAAQkC,EAAKZ,GAAK,KAAOmH,WAEpEjB,OAAM,SAACC,GACJC,QAAQC,IAAR,wGAAkCF,UAgIrC,cAAC,IAAD,CAAOtI,KAAK,WAAZ,SACE,cAAC,EAAD,CAAUyG,OApFrB,SAAwBzC,IDzKJ,SAACA,GACrB,OAAOH,MAAM,GAAD,OAAImD,EAAJ,WAAuB,CAC/B/C,OAAQ,OACRX,QAAS,CACP,eAAgB,oBAElBY,KAAMC,KAAKC,UACT,CAACnE,MAAO+D,EAAK/D,MAAOsG,SAAUvC,EAAKuC,aAEpCzC,KAAKiD,ICiKN+B,CAAc9E,GACTF,MAAK,WACFoE,KACAH,IAAqB,GACrBC,GAAQe,KAAK,eAEhBV,OAAM,SAACC,GACJC,QAAQC,IAAR,wGAAkCF,IAClCJ,KACAH,IAAqB,WA6ExB,cAAC,IAAD,CAAO/H,KAAK,WAAZ,SACE,cAAC,EAAD,CAAOyG,OAzElB,SAAqBzC,ID5KC,SAACA,GACvB,OAAOH,MAAM,GAAD,OAAImD,EAAJ,WAAuB,CAC/B/C,OAAQ,OACRX,QAAS,CACP,eAAgB,oBAElBY,KAAMC,KAAKC,UACT,CAACnE,MAAO+D,EAAK/D,MAAOsG,SAAUvC,EAAKuC,aAEpCzC,KAAKiD,ICoKN+B,CAAe9E,GACVF,MAAK,SAAAP,GACFoF,aAAac,QAAQ,MAAOlG,EAAIsF,OAChCvC,GAAStC,EAAK/D,OACd6H,GAAY,GACZE,GAAQe,KAAK,QAEhBV,OAAM,SAACC,GACJC,QAAQC,IAAR,wGAAkCF,IAClCJ,KACAH,IAAqB,cAmE7B,cAAC,EAAD,IAEA,0BAASpI,UAAU,SAAnB,UAEI,cAAC,EAAD,CACA8C,QAAS0F,GACT3F,OAAQgF,EACRtB,kBAAmBA,GACnB/E,KAAK,iBAGL,cAAC,EAAD,CACAqB,OAAQ0E,EACRzE,QAAS0F,GACTlD,aAlJR,SAA0BjB,GACtBhB,EAAI0G,aAAa1F,GACZF,MAAK,SAAAE,GACF4D,EAAe5D,GACfmE,QAEHE,OAAM,SAACC,GACJC,QAAQC,IAAR,wGAAkCF,UA8ItC,cAAC,EAAD,CACA9F,OAAQ4E,EACR3E,QAAS0F,GACTpG,WA/HR,SAAwBiC,GAEpBhB,EAAI2G,WAAW3F,GACVF,MAAK,SAAAsF,GACFvB,EAAS,CAACuB,GAAF,mBAAcpH,KACtBmG,QAEHE,OAAM,SAACC,GACJC,QAAQC,IAAR,wGAAkCF,UA0HtC,cAAC,EAAD,CAAenH,KAAK,aAAauB,MAAM,2DAAvC,SAEI,wBAAQ/C,UAAU,yCAAyC2B,KAAK,SAAhE,4BAIJ,cAAC,EAAD,CACAkB,OAAQ8E,EACR7E,QAAS0F,GACTvC,eAxJR,SAA4BjE,GACxB4G,QAAQC,IAAI7G,GACZqB,EAAI4G,eAAejI,GACdmC,MAAK,SAAAnC,GACFiG,EAAejG,GACfwG,QAEHE,OAAM,SAACC,GACJC,QAAQC,IAAR,wGAAkCF,UAmJtC,cAAC,EAAD,CACA7F,QAAS0F,GACTpF,KAAM2E,aCzSHmC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjG,MAAK,YAAkD,IAA/CkG,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.525131e8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Vector-mesto-logo.c2821b38.svg\";","import React from 'react';\r\nimport { Link, Route } from 'react-router-dom';\r\nimport logo from '../images/Vector-mesto-logo.svg';\r\n\r\nfunction Header(props) {\r\n    return (\r\n        (\r\n        <header className='header page__header'>\r\n            <img className='header__logo' src={logo} alt='Логотип'/>\r\n            <div className=\"header__container\">\r\n                <Route exact path=\"/\">\r\n                    <h3 className=\"header__email\">{props.email}</h3>\r\n                    <Link to=\"/sign-in\" onClick={props.logOut} className=\"header__description\">Выйти</Link>\r\n                </Route>\r\n\r\n                <Route path=\"/sign-up\">\r\n                    <Link to=\"/sign-in\" className=\"header__description\">Войти</Link>\r\n                </Route>\r\n\r\n                <Route path=\"/sign-in\">\r\n                    <Link to=\"/sign-up\" className=\"header__description\">Зарегистрироваться</Link>\r\n                </Route>\r\n            </div>\r\n        </header>\r\n        )\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\n\r\nexport const CurrentUserContext = React.createContext();\r\n\r\n\r\n","import React from 'react';\r\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\r\n\r\nfunction Card(props) {\r\n\r\n    //Подписываемся на контекст\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n\r\n    // Определяем, являемся ли мы владельцем текущей карточки\r\n    const isOwn = props.owner._id === currentUser._id;\r\n\r\n    // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\n    const isLiked = props.likes.some(i => i._id === currentUser._id);\r\n    \r\n    // Создаём переменную, которую после зададим в `className` для кнопки лайка\r\n    const cardLikeButtonClassName = isLiked ? 'elements__heart-button elements__heart-button_like' : 'elements__heart-button' ;\r\n\r\n    // обработчик клика лайка\r\n    function handleLikeClick() {\r\n        props.onCardLike(props);\r\n    };\r\n\r\n    //обработчки кнопки удаления карточки\r\n    function handleDeleteClick() {\r\n        props.onCardDelete(props)\r\n    }\r\n\r\n    //обработчик для сбора нужной информации и открытия большого варианта фото\r\n    function handleClick() {\r\n        props.onCardClick({name: props.name, link: props.link, imgOpen: true});\r\n      }  \r\n\r\n    return(\r\n    (\r\n        <li className='elements__item'>\r\n            <img className=\"elements__photo\" src={props.link} alt={props.name} onClick={handleClick}/>\r\n            <button type=\"button\" className={`elements__delete-photo ${isOwn ? '' : 'elements__delete-photo_no-active'}`} onClick={handleDeleteClick}></button>\r\n            <div className='elements__container'>\r\n                <h2 className='elements__text'>{props.name}</h2>\r\n                <div className=\"elements__like-container\">\r\n                    <button type=\"button\" className={cardLikeButtonClassName} onClick={handleLikeClick}></button>\r\n                    <p className=\"elements__like-counter\">{props.likes.length}</p>\r\n                </div>\r\n            </div> \r\n        </li> \r\n    )\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\r\n\r\n\r\n\r\nfunction Main(props) {\r\n    \r\n    \r\n    //подписываемся на контекст\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n\r\n   \r\n    return(\r\n        (\r\n        <main className='content'>\r\n            \r\n            <section className='profile page__profile'>\r\n              <div className='profile__main-container'>\r\n                <div className='profile__avatar-container'>\r\n                    <img className='profile__avatar' src={currentUser.avatar} alt='Аватарка'/>\r\n                    <div className=\"profile__avatar-overlay\">\r\n                        <button onClick={props.onEditAvatar} className='profile__avatar-edit' type=\"button\"></button>\r\n                    </div> \r\n                </div>\r\n                <div className='profile__info'>\r\n                    <div className='profile__title-button'>\r\n                        <h1 className='profile__title'>{currentUser.name}</h1>\r\n                        <button onClick={props.onEditProfile} className='profile__edit-button' type='button'></button>\r\n                    </div>\r\n                    <p className='profile__subtitle'>{currentUser.about}</p>\r\n                </div>\r\n              </div>\r\n                <button onClick={props.onAddPlace} className='profile__add-button' type='button'></button>\r\n\r\n            </section>\r\n            <section className='elements page__elements'>\r\n                <ul className='elements__list'>\r\n                    { props.cards.map(item => (\r\n                            <Card\r\n                            key={item._id}\r\n                            link={item.link}\r\n                            name={item.name}\r\n                            likes={item.likes}\r\n                            onCardClick={props.onCardClick}\r\n                            owner = {item.owner}\r\n                            onCardLike = {props.onCardLike}\r\n                            id = {item._id}\r\n                            onCardDelete = {props.onCardDelete}\r\n                            \r\n                            \r\n                            />\r\n                    )\r\n                        )}\r\n                </ul>\r\n            </section>\r\n        </main>\r\n        )\r\n    );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nfunction Footer() {\r\n    return(\r\n        (\r\n        <footer className=\"footer page__footer\">\r\n            <p className='footer__text'>&copy; {new Date().getFullYear()} Mesto Russia</p>\r\n        </footer>\r\n        )\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nfunction PopupWithForm(props) {\r\n\r\n    \r\n    return (\r\n        (\r\n        <div className={`popup popup_${props.name} ${props.isOpen ? 'popup_opened' :''}`}>\r\n            <div className={`popup__container popup__container_${props.name}`}>\r\n                <button className={`popup__close popup__close_${props.name}`} type='button' onClick={props.onClose}></button>\r\n                <h2 className='popup__title'>{props.title}</h2>\r\n                <form onSubmit={props.onSubmit} className={`popup__form popup__form_${props.name}`} name={`${props.name}-form`} noValidate>\r\n                    {props.children}\r\n                </form>\r\n            </div>\r\n        </div>\r\n        )\r\n    );\r\n\r\n}\r\n\r\nexport default PopupWithForm;\r\n\r\n\r\n","import React from 'react';\r\n\r\nfunction ImagePopup(props) {\r\n    //console.log(props);\r\n\r\n    \r\n\r\n    return(\r\n        (\r\n        <div className={`popup popup_img ${props.card.imgOpen ? 'popup_opened' :''}`}>\r\n            <div className='popup__container popup__container_img'>\r\n                <button className=\"popup__close popup__close_img\" type=\"button\" onClick={props.onClose}></button>\r\n                <img className=\"popup__image\" src={props.card.link} alt={props.card.name}/>\r\n                <h2 className=\"popup__title popup__title_img\">{props.card.name}</h2>\r\n            </div>\r\n        </div>\r\n        )\r\n    );\r\n}\r\n\r\nexport default ImagePopup;","//класс для подключения api\r\n\r\n class Api {\r\n    //конструктор принимает адрес куда обращаться за данными (или куда их отправлять) и настройки.\r\n    constructor(config) {\r\n        this._url = config.url;\r\n        this._headers = config.headers;\r\n    }\r\n\r\n\r\n    //приватный метод с повтряющимся кодом у всех запросов (то что идет после 1 return)\r\n\r\n    _checkResponse(res) {\r\n        if (res.ok) {\r\n            return res.json()\r\n        }\r\n\r\n        return Promise.reject(`Сервер недоступен. Ошибка: ${res.status}.`);\r\n    }\r\n\r\n    // метод по инициализации карточек с сервера\r\n\r\n    getInitialCards() {\r\n       return fetch(`${this._url}cards`, {\r\n             headers: this._headers, \r\n        }).then(this._checkResponse);\r\n    }\r\n\r\n    //метод по добавлению новой карточки\r\n\r\n    addNewCard(data) {\r\n        return fetch(`${this._url}cards`, {\r\n              method: 'POST',\r\n              headers: this._headers,\r\n              body: JSON.stringify({\r\n                  name: data.name,\r\n                  link: data.link,\r\n              })\r\n        }).then(this._checkResponse);\r\n    }\r\n\r\n    //метод по получению информации о пользователе\r\n\r\n    getUserInfo() {\r\n        return fetch(`${this._url}users/me`, {\r\n              headers: this._headers,\r\n        }).then(this._checkResponse);\r\n    }\r\n\r\n    //метод по изменению информации о пользователе\r\n\r\n    editUserInfo(data) {\r\n        return fetch(`${this._url}users/me`, {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: data.name,\r\n                about: data.about,\r\n              })\r\n        }).then(this._checkResponse);\r\n    }\r\n\r\n    //метод по смене аватарки\r\n\r\n    editUserAvatar(data) {\r\n        return fetch(`${this._url}users/me/avatar`, {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                avatar: data.avatar\r\n              })\r\n        }).then(this._checkResponse);\r\n    }\r\n\r\n\r\n    //приватный метод по установке лайка\r\n\r\n    _putLike(cardId) {\r\n        return fetch(`${this._url}cards/likes/${cardId}/`, {\r\n            method: 'PUT',\r\n            headers: this._headers,\r\n      }).then(this._checkResponse);\r\n    }\r\n\r\n    //приватный метод по снятию лайка\r\n\r\n    _removeLike(cardId) {\r\n        return fetch(`${this._url}cards/likes/${cardId}/`, {\r\n            method: 'DELETE',\r\n            headers: this._headers,\r\n      }).then(this._checkResponse);\r\n    }\r\n\r\n\r\n    //Единый метод по установке и снятию лайка\r\n\r\n    changeLikeCardStatus(cardId, isLiked) {\r\n        if (isLiked) {\r\n           return this._putLike(cardId);\r\n        }\r\n        else {\r\n            return this._removeLike(cardId);\r\n        }\r\n    }\r\n\r\n    //метод по удалению карточки\r\n\r\n    deleteCard(cardId) {\r\n        return fetch(`${this._url}cards/${cardId}/`, {\r\n            method: 'DELETE',\r\n            headers: this._headers,\r\n      }).then(this._checkResponse);\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nconst api = new Api({\r\n    url: \"https://mesto.nomoreparties.co/v1/cohort-20/\", \r\n    headers: {\r\n        \"content-type\": \"application/json\",\r\n        \"Authorization\": \"43c52a6d-19a6-461e-b067-2db5e03ba70b\",\r\n    }\r\n});\r\n\r\nexport default api;\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\r\n\r\nfunction EditProfilePopup(props) {\r\n\r\n    //Подписываемся на контекст\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n\r\n    //стейт-переменные для имени и профессии\r\n    const [name, setName] = React.useState('')\r\n    const [description, setDescription] = React.useState('')\r\n\r\n    // обработчики для изменения инпутов и обновления стейтов \r\n    function handleChangeName(e) {\r\n        setName(e.target.value);\r\n    } \r\n\r\n    function handleChangeDescription(e) {\r\n        setDescription(e.target.value);\r\n    } \r\n\r\n\r\n    //эффект для обновления переменных состояния при изминении контекста\r\n    React.useEffect(() => {\r\n        setName(currentUser.name);\r\n        setDescription(currentUser.about);\r\n      }, [currentUser]); \r\n\r\n    //функция по сбрасыванию действия по умолчанию и для передачи значений инпутов в следующий компонент\r\n    function handleSubmit(e) {\r\n        // Запрещаем браузеру переходить по адресу формы\r\n        e.preventDefault();\r\n      \r\n        // Передаём значения управляемых компонентов во внешний обработчик\r\n        props.onUpdateUser({\r\n          name,\r\n          about: description,\r\n        });\r\n      } \r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <PopupWithForm \r\n            name='user'\r\n            title='Редактировать профиль' \r\n            isOpen={props.isOpen}\r\n            onClose={props.onClose}\r\n            onSubmit={handleSubmit}\r\n            >\r\n            \r\n                <input value={name} onChange={handleChangeName} type=\"text\" className=\"popup__input popup__input_topform\" name=\"popup-name\" placeholder=\"Имя\" required minLength='2' maxLength='40' id=\"name-user-input\"/>\r\n                <span className=\"popup__span span_all-error\" id=\"name-user-input-error\"></span>\r\n                <input value={description} onChange={handleChangeDescription}  type=\"text\" className=\"popup__input popup__input_bottomform\" name=\"popup-about\" placeholder=\"О себе\" required minLength='2' maxLength='200' id=\"about-user-input\"/>\r\n                <span className=\"popup__span span_all-error\" id=\"about-user-input-error\"></span>\r\n                <button className=\"popup__button\" type='submit'>Сохранить</button>\r\n            \r\n        </PopupWithForm>\r\n    )\r\n\r\n}\r\n\r\nexport default EditProfilePopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\n\r\nfunction EditAvatarPopup(props) {\r\n    \r\n    //создаем реф\r\n    const avatarRef = React.useRef()\r\n    \r\n    //функция по сбрасыванию действия по умолчанию и для передачи значений инпутов в следующий компонент\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        \r\n        props.onUpdateAvatar({\r\n          avatar: avatarRef.current.value\r\n        });\r\n      }\r\n      \r\n\r\n\r\n\r\n    return (\r\n        <PopupWithForm\r\n            name='new-avatar'\r\n            title='Обновить аватар'\r\n            isOpen={props.isOpen}\r\n            onClose={props.onClose}\r\n            onSubmit={handleSubmit}\r\n            >\r\n                \r\n                <input ref={avatarRef} type=\"url\" className=\"popup__input popup__input_topform popup__input_new-avatar\" name=\"new-avatar-photo\" placeholder=\"Ссылка на картинку\" required id=\"new-avatar\"/>\r\n                <span className='popup__span' id=\"new-avatar-error span_all-error\"></span>\r\n                <button className=\"popup__button popup__button_new-avatar\" type='submit'>Сохранить</button>\r\n                \r\n            </PopupWithForm>\r\n    )\r\n\r\n}\r\n\r\nexport default EditAvatarPopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\n\r\nfunction AddPlacePopup(props) {\r\n        \r\n        //стейт-переменные для названия карточки и ссылки на картинку\r\n        const [name, setName] = React.useState('')\r\n        const [link, setLink] = React.useState('')\r\n    \r\n        // обработчики для изменения инпутов и обновления стейтов \r\n        function handleChangeName(e) {\r\n            setName(e.target.value);\r\n        } \r\n    \r\n        function handleChangeLink(e) {\r\n            setLink(e.target.value);\r\n        } \r\n\r\n           //функция по сбрасыванию действия по умолчанию и для передачи значений инпутов в следующий компонент\r\n        function handleSubmit(e) {\r\n          // Запрещаем браузеру переходить по адресу формы\r\n          e.preventDefault();\r\n      \r\n          // Передаём значения управляемых компонентов во внешний обработчик\r\n          props.onAddPlace({\r\n          name: name,\r\n          link: link,\r\n          });\r\n          setName('');\r\n          setLink('');\r\n        }\r\n\r\n       \r\n      \r\n      \r\n      return (\r\n        <PopupWithForm\r\n        name='place'\r\n        title='Новое место'\r\n        isOpen={props.isOpen}\r\n        onClose={props.onClose}\r\n        onSubmit={handleSubmit}\r\n        >\r\n            \r\n            <input value={name} onChange={handleChangeName} type=\"text\" className=\"popup__input popup__input_topform\" name=\"popup-name-place\" placeholder=\"Название\" required minLength='2' maxLength='30' id=\"name-place-input\"/>\r\n            <span className='popup__span span_all-error' id=\"name-place-input-error\"></span>\r\n            <input value={link} onChange={handleChangeLink} type=\"url\" className=\"popup__input popup__input_bottomform\" name=\"popup-link-photo\" placeholder=\"Ссылка на картинку\" required id=\"link-input\"/>\r\n            <span className='popup__span span_all-error' id=\"link-input-error\"></span>\r\n            <button className=\"popup__button\" type='submit'>Сохранить</button>\r\n            \r\n        </PopupWithForm>\r\n      );\r\n\r\n}\r\n\r\nexport default AddPlacePopup;","export default __webpack_public_path__ + \"static/media/popupAccept.a9eb6caf.svg\";","export default __webpack_public_path__ + \"static/media/popupError.d4ce2a26.svg\";","import React from 'react';\r\nimport popupAccept from '../images/popupAccept.svg';\r\nimport popupError from '../images/popupError.svg';\r\n\r\nfunction InfoTooltip(props) {\r\n    return(\r\n        <div className={`popup popup_${props.name} ${props.isOpen ? 'popup_opened' :''}`}>\r\n            <div className={`popup__container popup__container_${props.name}`}>\r\n                <button className={`popup__close popup__close_${props.name}`} type='button' onClick={props.onClose}></button>\r\n                <img className=\"popup__registration-img\" src={props.checkRegistration ? popupAccept : popupError} alt={props.checkRegistration ? 'Успех!' : 'Неудача :('}></img>\r\n                <h2 className=\"popup__registration-title\">{props.checkRegistration ? 'Вы успешно зарегистрировались!' : 'Что-то пошло не так! Попробуйте еще раз.'}</h2>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InfoTooltip;","import React from 'react';\r\n\r\n\r\nfunction Login(props) {\r\n    //стейт-переменные для инпутов\r\n    const [email, setEmail] = React.useState('');\r\n    const [password, setPassword] = React.useState('');\r\n\r\n    //обработчики для изменения инпутов и обновления стейтов \r\n\r\n    function handleChangeEmail(e) {\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n    function handleChangePassword(e) {\r\n        setPassword(e.target.value);\r\n    }\r\n\r\n    //функция по сбрасыванию действия по умолчанию и для передачи значений инпутов в следующий компонент\r\n    function handleSubmit(e) {\r\n        // Запрещаем браузеру переходить по адресу формы\r\n        e.preventDefault();\r\n        // Передаём значения управляемых компонентов во внешний обработчик\r\n        props.onData({\r\n            email: email,\r\n            password: password,\r\n        });\r\n    }\r\n\r\n    return(\r\n        (\r\n        <div className=\"user-data-container page__user-data-container\">\r\n            <h2 className=\"user-data-container__title\">Вход</h2>\r\n            <form className=\"user-data-container__form\" onSubmit={handleSubmit} name=\"user-data\" noValidate>\r\n\r\n                <input value={email} onChange={handleChangeEmail} type=\"email\" className=\"user-data-container__input\" name=\"user-data-name\" placeholder=\"Email\" required minLength='2' maxLength='40' id=\"user-data-name\"/>\r\n                <span className=\"user-data-container__span span_all-error\" id=\"user-data-name-error\"></span>\r\n\r\n                <input value={password} onChange={handleChangePassword}  type=\"password\" className=\"user-data-container__input\" name=\"user-data-password\" placeholder=\"Пароль\" required minLength='2' maxLength='200' id=\"user-data-password\"/>\r\n                <span className=\"user-data-container__span span_all-error\" id=\"user-data-password-error\"></span>\r\n\r\n                <button className=\"user-data-container__button\" type='submit'>Войти</button>\r\n            </form>\r\n        </div>\r\n    )\r\n    )\r\n    \r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\n\r\nfunction ProtectedRoute({ component: Component, ...props }) {\r\n    return (\r\n        <Route>\r\n            {() => \r\n                props.loggedIn ? < Component {...props} /> : <Redirect to=\"/sign-in\" />\r\n            }\r\n        </Route>\r\n    )\r\n}\r\n\r\nexport default ProtectedRoute;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Register(props) {\r\n\r\n    //стейт-переменные для инпутов\r\n    const [email, setEmail] = React.useState('');\r\n    const [password, setPassword] = React.useState('');\r\n\r\n    //обработчики для изменения инпутов и обновления стейтов \r\n\r\n    function handleChangeEmail(e) {\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n    function handleChangePassword(e) {\r\n        setPassword(e.target.value);\r\n    }\r\n\r\n    //функция по сбрасыванию действия по умолчанию и для передачи значений инпутов в следующий компонент\r\n    function handleSubmit(e) {\r\n        // Запрещаем браузеру переходить по адресу формы\r\n        e.preventDefault();\r\n        // Передаём значения управляемых компонентов во внешний обработчик\r\n        props.onData({\r\n            email: email,\r\n            password: password,\r\n        });\r\n    }\r\n\r\n\r\n    return(\r\n        (\r\n        <div className=\"user-data-container page__user-data-container\">\r\n            <h2 className=\"user-data-container__title\">Регистрация</h2>\r\n            <form className=\"user-data-container__form\" onSubmit={handleSubmit} name=\"user-data\" noValidate>\r\n\r\n                <input value={email} onChange={handleChangeEmail} type=\"email\" className=\"user-data-container__input\" name=\"user-data-name\" placeholder=\"Email\" required minLength='2' maxLength='40' id=\"user-data-name\"/>\r\n                <span className=\"user-data-container__span\" id=\"user-data-name-error\"></span>\r\n\r\n                <input value={password} onChange={handleChangePassword}  type=\"password\" className=\"user-data-container__input\" name=\"user-data-password\" placeholder=\"Пароль\" required minLength='2' maxLength='200' id=\"user-data-password\"/>\r\n                <span className=\"user-data-container__span\" id=\"user-data-password-error\"></span>\r\n\r\n                <button className=\"user-data-container__button\" type='submit'>Зарегистрироваться</button>\r\n            </form>\r\n            <Link className=\"user-data-container__link\"  to=\"/sign-in\">Уже зарегистрированы? Войти</Link>\r\n        </div>\r\n    )\r\n    )\r\n}\r\n\r\nexport default Register;","const checkResponse = (res) => {\r\n    if (res.ok) {\r\n        return res.json()\r\n    }\r\n\r\n    return Promise.reject(`Сервер недоступен. Ошибка: ${res.status}.`);\r\n}\r\n\r\nexport const BASE_URL = 'https://auth.nomoreparties.co';\r\n\r\nexport const register = (data) => {\r\n    return fetch(`${BASE_URL}/signup`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(\r\n          {email: data.email, password: data.password}\r\n          )\r\n      }).then(checkResponse)\r\n}\r\n\r\nexport const authorize  = (data) => {\r\n    return fetch(`${BASE_URL}/signin`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(\r\n          {email: data.email, password: data.password}\r\n          )\r\n      }).then(checkResponse)\r\n}\r\n\r\nexport const checkToken = (token) => {\r\n    return fetch(`${BASE_URL}/users/me`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`,\r\n      }\r\n    })\r\n      .then(res => checkResponse(res))\r\n  }","import React from 'react';\r\n\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport ImagePopup from './ImagePopup';\r\nimport api from '../utils/api';\r\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\n\r\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\r\nimport InfoTooltip from './InfoTooltip';\r\nimport Login from './Login';\r\nimport ProtectedRoute from './ProtectedRoute';\r\nimport Register from './Register';\r\nimport * as auth from '../utils/auth';\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n    //стейт переменные, history\r\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\r\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\r\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\r\n    const [isInfoTooltip, setIsInfoTooltip] = React.useState(false);\r\n    const [selectedCard, setSelectedCard] = React.useState({name: '', link: '', imgOpen: false});\r\n    const [currentUser, setCurrentUser] = React.useState({\r\n        //пока идет загрузка с сервера чтобы позиции не были пустыми и говорили о выполнении загрузки\r\n        name: 'Ждёмс',\r\n        about: 'Ждёмс',\r\n        avatar: 'https://i007.fotocdn.net/s124/4a5340ffd4d2b33c/public_pin_l/2826322361.jpg'\r\n    });\r\n    const [cards, setCards] = React.useState([]);\r\n    const [loggedIn, setLoggedIn] = React.useState(false);\r\n    const [email, setEmail] = React.useState('');\r\n    const [checkRegistration, setCheckRegistration] = React.useState('');\r\n    const history = useHistory();\r\n\r\n\r\n    //Загружаем карточки с сервера. Проставлена зависимость. \r\n    React.useEffect(() => {\r\n        \r\n        api.getInitialCards()\r\n            .then(cards => {\r\n                setCards(cards);\r\n            })\r\n\r\n            .catch((err) => {\r\n                console.log(`Произошла ошибка - ${err}`);\r\n            })\r\n        \r\n    }, []);\r\n\r\n\r\n    //эффект для получения информации о пользователе\r\n    React.useEffect(() => {\r\n        api.getUserInfo()\r\n        .then(userInfo => {\r\n            setCurrentUser(userInfo);\r\n        })\r\n        .catch((err) => {\r\n            console.log(`Произошла ошибка - ${err}`);\r\n        })\r\n    }, []);\r\n    //эффект для проверки токена при загрузке сайта\r\n    React.useEffect(() => {\r\n        handleTokenCheck();\r\n        /*если ставить зависимость [] чтобы проверялось только при загрузке, то вылетает ошибка:\r\n        Line 67:8:  React Hook React.useEffect has a missing dependency: 'handleTokenCheck'. Either include it or remove the dependency array  react-hooks/exhaustive-deps\r\n        Разобраться в чем проблема!!! */\r\n    });\r\n\r\n    //обработчки для открытия попапов\r\n\r\n    function handleInfoTooltip() {\r\n        setIsInfoTooltip(true);\r\n    }\r\n\r\n    function handleEditAvatarClick() {\r\n        setIsEditAvatarPopupOpen(true);\r\n    }\r\n    \r\n    \r\n    function handleEditProfileClick() {\r\n        setIsEditProfilePopupOpen(true);\r\n    }\r\n    \r\n    function handleAddPlaceClick() {\r\n        setIsAddPlacePopupOpen(true);\r\n    }\r\n\r\n\r\n    //обработчик по закрытию попапов\r\n    function closeAllPopups() {\r\n        setIsEditAvatarPopupOpen(false);\r\n        setIsEditProfilePopupOpen(false);\r\n        setIsAddPlacePopupOpen(false);\r\n        setSelectedCard({name: '', link: '', imgOpen: false});\r\n        setIsInfoTooltip(false);\r\n    }\r\n\r\n    //обработчик для открытия большого варианта фото\r\n    function handleCardClick(card) {\r\n        setSelectedCard(card);\r\n    }\r\n\r\n    //функция по снятию-постановке лайка на карточку с использованием api\r\n    function handleCardLike(card) {\r\n\r\n        // Снова проверяем, есть ли уже лайк на этой карточке\r\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n        \r\n        // Отправляем запрос в API и получаем обновлённые данные карточки\r\n        api.changeLikeCardStatus(card.id, !isLiked)\r\n            .then((newCard) => {\r\n                setCards(state => state.map((c) => c._id === card.id ? newCard : c)); \r\n            })\r\n            .catch((err) => {\r\n                console.log(`Произошла ошибка - ${err}`);\r\n            })\r\n    }\r\n\r\n    //функция по удалению карточки с использованием api\r\n    function handleCardDelete(card) {\r\n        api.deleteCard(card.id)\r\n            .then((deleteCard) => {\r\n                //console.log(deleteCard);\r\n                setCards(state => state.filter((c) => c._id === card.id ? null : c));\r\n            })\r\n            .catch((err) => {\r\n                console.log(`Произошла ошибка - ${err}`);\r\n            })\r\n\r\n    }\r\n\r\n    //обработчки для отправки через api новых данных о пользователе и обновлении страницы\r\n    function handleUpdateUser(data) {\r\n        api.editUserInfo(data)\r\n            .then(data => {\r\n                setCurrentUser(data)\r\n                closeAllPopups()\r\n            })\r\n            .catch((err) => {\r\n                console.log(`Произошла ошибка - ${err}`);\r\n            })\r\n    }\r\n\r\n    //обработчик для отправки через api данных о новом аватаре и обновлении страницы\r\n    function handleUpdateAvatar(avatar) {\r\n        console.log(avatar);\r\n        api.editUserAvatar(avatar)\r\n            .then(avatar => {\r\n                setCurrentUser(avatar)\r\n                closeAllPopups()\r\n            })\r\n            .catch((err) => {\r\n                console.log(`Произошла ошибка - ${err}`);\r\n            })\r\n    }\r\n\r\n    //обработчик для добавления новой карточки через api и обновлении страницы\r\n    function handleAddPlace(data) {\r\n        //console.log(data);\r\n        api.addNewCard(data)\r\n            .then(newCard => {\r\n                setCards([newCard, ...cards]);\r\n                closeAllPopups() \r\n            })\r\n            .catch((err) => {\r\n                console.log(`Произошла ошибка - ${err}`);\r\n            })\r\n    }\r\n\r\n    \r\n    //обработчик для регистрации\r\n    function handleRegister(data) {\r\n        auth.register(data)\r\n            .then(() => {\r\n                handleInfoTooltip();\r\n                setCheckRegistration(true);\r\n                history.push('/sign-in');\r\n            })\r\n            .catch((err) => {\r\n                console.log(`Произошла ошибка - ${err}`);\r\n                handleInfoTooltip();\r\n                setCheckRegistration(false);\r\n            })\r\n    }\r\n\r\n    //обработчик для авторизации\r\n    function handleLogin(data) {\r\n        auth.authorize(data)\r\n            .then(res => {\r\n                localStorage.setItem('jwt', res.token);\r\n                setEmail(data.email);\r\n                setLoggedIn(true);\r\n                history.push('/');\r\n            })\r\n            .catch((err) => {\r\n                console.log(`Произошла ошибка - ${err}`);\r\n                handleInfoTooltip();\r\n                setCheckRegistration(false);\r\n            })\r\n    }\r\n\r\n    //функция по проверке токена\r\n    function handleTokenCheck() {\r\n        if(localStorage.getItem('jwt')) {\r\n            const token = localStorage.getItem('jwt');\r\n            if(token) {\r\n                auth.checkToken(token)\r\n                    .then(res => {\r\n                        if(res) {\r\n                            setLoggedIn(true);\r\n                            setEmail(res.data.email);\r\n                            history.push('/');\r\n                        }\r\n                    })\r\n                    .catch((err) => {\r\n                        console.log(`Произошла ошибка - ${err}`);\r\n                    })\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    //обработчик по выходу из аккаунта\r\n    function handleLogOut() {\r\n        setLoggedIn(false);\r\n        setEmail('');\r\n        localStorage.removeItem('jwt');\r\n        <Redirect to=\"sign-in\" />\r\n    }\r\n\r\n\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={ currentUser }>\r\n    <div className=\"page\">\r\n        <Header\r\n        email={email}\r\n        logOut={handleLogOut}\r\n         />\r\n\r\n        <Switch>\r\n             <ProtectedRoute\r\n             exact path=\"/\"\r\n             loggedIn={loggedIn}\r\n             component={Main}\r\n             onEditProfile={handleEditProfileClick}\r\n             onAddPlace={handleAddPlaceClick}\r\n             onEditAvatar={handleEditAvatarClick}\r\n             onCardClick={handleCardClick}\r\n             cards={cards}\r\n             onCardLike={handleCardLike}\r\n             onCardDelete={handleCardDelete}\r\n             />\r\n\r\n             <Route path=\"/sign-up\">\r\n               <Register onData={handleRegister} />\r\n             </Route>\r\n\r\n             <Route path=\"/sign-in\">\r\n               <Login onData={handleLogin} />\r\n             </Route>\r\n\r\n        </Switch>\r\n\r\n        <Footer />\r\n\r\n        <section className='popups'>\r\n\r\n            <InfoTooltip\r\n            onClose={closeAllPopups}\r\n            isOpen={isInfoTooltip}\r\n            checkRegistration={checkRegistration}\r\n            name='registration'\r\n            />\r\n\r\n            <EditProfilePopup \r\n            isOpen={isEditProfilePopupOpen} \r\n            onClose={closeAllPopups}\r\n            onUpdateUser={handleUpdateUser} /> \r\n\r\n\r\n            <AddPlacePopup\r\n            isOpen={isAddPlacePopupOpen}\r\n            onClose={closeAllPopups}\r\n            onAddPlace={handleAddPlace} />\r\n\r\n\r\n            <PopupWithForm name='areyousure' title='Вы уверены?'>\r\n                \r\n                <button className=\"popup__button popup__button_areyousure\" type='submit'>Да</button>\r\n                \r\n            </PopupWithForm>\r\n\r\n            <EditAvatarPopup\r\n            isOpen={isEditAvatarPopupOpen} \r\n            onClose={closeAllPopups}\r\n            onUpdateAvatar={handleUpdateAvatar}\r\n            />\r\n\r\n            <ImagePopup\r\n            onClose={closeAllPopups}\r\n            card={selectedCard}\r\n            \r\n             />\r\n            \r\n        </section>\r\n    </div>\r\n</CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\r\n\r\nimport App from './components/App';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}